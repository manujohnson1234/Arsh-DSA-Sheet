#include <bits/stdc++.h>
using namespace std;

int findMax(vector<int> &temp) {
    int mx = 0;
    int currentLength = 0;

    for(int i = 0; i < temp.size(); i++) {
        if(temp[i] == 0) {
            currentLength++;
        } else {
            mx = max(mx, currentLength); 
            currentLength = 0;
        }
    }
    mx = max(mx, currentLength);
    return mx;
}




void maxMatrixSum(vector<vector<int> > &v){
    int n = v.size();
    int m = v[0].size();
    int ans = INT_MIN;
    
    for(int i=0; i < n; i++){
        vector<int> temp(m, 0);
        for(int k = i; k < n; k++){
            for(int j = 0; j < m; j++){
                temp[j] += v[k][j];
            }
            int c = findMax(temp);
            ans = max(ans, (k-i+1)*c);
        }
        
    }
    
    cout << ans << endl;
}




int main() {
	// your code goes here
    
    vector<vector<int> > v = {  {-1, -1, 1, 1},
                                {1, 1, 1, -1},
                                {1, 1, 1, -1},
                                {1, -1, -1, 1} };
    maxMatrixSum(v);
    
}
