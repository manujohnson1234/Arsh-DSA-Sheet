class Solution {
    unordered_map<int,vector<int>> adj;
    
    long long count(int num, int n, vector<vector<long long>> &dp){
        if(n == 0) return 1;
        
        if(dp[num][n] != -1) return dp[num][n];
        
        long long ans = 0;
        for(auto ele: adj[num]){
            ans += count(ele,n-1,dp);
        }
        return dp[num][n] = ans;
    }
    
    
  public:
    Solution(){
        adj[0] = {0,8};
        adj[1] = {1,2,4};
        adj[2] = {1,2,3,5};
        adj[3] = {2,3,6};
        adj[4] = {1,4,5,7};
        adj[5] = {2,4,5,6,8};
        adj[6] = {3,5,6,9};
        adj[7] = {4,7,8};
        adj[8] = {0,5,7,8,9};
        adj[9] = {6,8,9};
       
        
    }
    long long getCount(int n) {
        // Your code goes here
        vector<vector<long long>> dp(10, vector<long long>(n+1, 0));
        long long ans = 0;
        for(int i =0; i <= 9; i++){
            ans += count(i,n-1,dp);
        }
        
        for(int j = 1; j < )
        
        return ans;
    }
};
