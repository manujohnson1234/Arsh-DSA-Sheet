class Solution {

    int paths(int i, int j, int n, int m, vector<vector<int>> &dp){
        if(i == (n-1) && j == (m-1)){
            return 1;
        }
        if(i >= n || j >= m) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        return dp[i][j] = paths(i+1,j,n,m,dp) + paths(i,j+1,n,m,dp);


    }


public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m, vector<int>(n, 0));

         for(int i = 0; i < n; i++){
            dp[0][i] = 1;
        }

        for(int i = 1; i < m; i++){
            dp[i][0] = 1;
        }
 
        for(int i=1; i < m; i++){
            for(int j = 1; j < n; j++){
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }

        return dp[m-1][n-1];

    }
};
