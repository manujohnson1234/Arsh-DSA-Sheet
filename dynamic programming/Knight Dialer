#define mod 1000000007

class Solution {
    unordered_map<int,vector<int>> mp;

    int combine(int i, int val, vector<vector<int>> &dp){
        if(i == 1) return 1;


        if(dp[val][i] != -1) return dp[val][i];

        int sum = 0;
        for(auto ele: mp[val]){
            sum = (sum + combine(i-1, ele,dp)%mod)%mod;
        }

        return dp[val][i] =  sum;

    }



public:

    Solution(){
        mp[0] = {4,6};
        mp[1] = {6,8};
        mp[2] = {7,9};
        mp[3] = {4,8};
        mp[4] = {0,3,9};
        mp[6] = {0,1,7};
        mp[7] = {2,6};
        mp[8] = {1,3};
        mp[9] = {2,4};
    }
    int knightDialer(int n) {
        int ans = 0;

        vector<vector<int>> dp(10, vector<int>(n+1, 0));

        for(int i=0;i<10;i++) {
            dp[i][1]=1;
        }

          for(int j=2;j<=n;j++) {
            for(int i=0;i<=9;i++) {
                for(auto ele: mp[i]) {
                    dp[i][j]=(dp[i][j]%mod+dp[ele][j-1]%mod)%mod;
                }
            }
        }

        for(int i = 0; i <= 9; i++){
            ans = (ans+dp[i][n]) % mod;
        }
        return ans;
    }
};
