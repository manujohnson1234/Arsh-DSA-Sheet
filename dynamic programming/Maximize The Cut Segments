class Solution
{
    
    int cuts(int n, int x, int y, int z, vector<int> &dp){
        if(n == 0) return 0;
        
        if(dp[n] != -1) return dp[n];
        
        int ans = INT_MIN;
        
        if(n >= x){
            ans = cuts(n-x,x,y,z,dp)+1;
        }
        
        if(n >= y){
            ans = max(ans, cuts(n-y,x,y,z,dp)+1);
        }
        
        if(n >= z){
            ans = max(ans, cuts(n-z,x,y,z,dp)+1);
        }
        return dp[n]= ans;
    }
    
    
    
    public:
    //Function to find the maximum number of cuts.
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        vector<int> dp(n+1, -1);
        int ans = cuts(n,x,y,z,dp);
        
        if(ans <= 0) return 0;
        return ans;
    }
};
