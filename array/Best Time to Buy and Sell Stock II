class Solution {


    int profit(int i,int sell,vector<int>& prices, vector<vector<int>> &dp){
        if(i == prices.size()) return 0;

        if(dp[i][sell] != -1) return dp[i][sell];

        if(sell){
            return dp[i][sell] = max(profit(i+1,0,prices,dp)+prices[i], profit(i+1,1,prices,dp));
        }

        return dp[i][sell] = max(profit(i+1,1,prices,dp)-prices[i], profit(i+1,0,prices,dp));

    }


public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<vector<int>> dp(n+1, vector<int>(2, 0));

        for(int i =n-1; i >= 0; i--){
            for(int sell = 0; sell < 2; sell++){
                if(sell == 0){
                    dp[i][sell] = max(dp[i+1][1]+prices[i],dp[i+1][0]);
                }else{
                    dp[i][sell] = max(dp[i+1][0] - prices[i], dp[i+1][1]);
                }
            }
        }
        
        return dp[0][1];
    }
};
