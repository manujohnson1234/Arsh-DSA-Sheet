class Solution {


    bool search(vector<vector<char>>& board, int i, int j, int ind, string word, int n, int m){
        if(ind == word.size()) return true;

        if(i < 0 || i >= n || j < 0 || j >= m || board[i][j] == '0' || board[i][j] != word[ind]) return false;

        char temp = board[i][j];
        board[i][j] = '0';

        int dx[] = {1,-1,0,0};
        int dy[] = {0,0,1,-1};

        for(int k = 0; k < 4; k++){
            int xi = dx[k] + i;
            int yi = dy[k] + j;
            if(search(board, xi, yi, ind+1, word, n, m)) return true;
        }

        board[i][j] = temp;
        return false;
    }



public:
    bool exist(vector<vector<char>>& board, string word) {
        int n = board.size();
        int m = board[0].size();
        
        for(int i =0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(search(board, i, j, 0, word, n, m)) return true;
            }
        }
        return false;
    }
};
